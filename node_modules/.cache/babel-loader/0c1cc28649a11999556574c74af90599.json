{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/the_o/codefellows/401/lab-29/src/app.js\";\nimport React from 'react';\nimport Form from './components/form.js';\nimport Title from './components/title.js';\nimport List from './components/list.js';\nimport './styles.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://swapi.co/api/people/').then(data => data.json()).then(jsonResult => {\n      console.log(jsonResult);\n      this.setState({\n        items: jsonResult.results\n      });\n    }).catch(console.error);\n  } // addItem = (string) => {\n  //   this.state.items.push(string);\n  //   this.setState({items:this.state.items})\n  // }\n  // deleteItem = (idx) => {\n  //   this.state.items.splice(idx,1);\n  //   this.setState({items:this.state.items});\n  // }\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.state.items.map((person, idx) => React.createElement(\"li\", {\n      key: idx,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, person.name))), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(List, {\n      items: this.state.items,\n      deleteItem: this.deleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form, {\n      addItem: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/mnt/c/Users/the_o/codefellows/401/lab-29/src/app.js"],"names":["React","Form","Title","List","App","Component","constructor","props","state","items","componentDidMount","fetch","then","data","json","jsonResult","console","log","setState","results","catch","error","render","map","person","idx","name","deleteItem","addItem"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAO,cAAP;;AAGA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAC;AADK,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,UAAU,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,WAAKG,QAAL,CAAc;AAACT,QAAAA,KAAK,EAACM,UAAU,CAACI;AAAlB,OAAd;AACD,KALD,EAMCC,KAND,CAMOJ,OAAO,CAACK,KANf;AAOD,GAlB+B,CAoBhC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAGAC,EAAAA,MAAM,GAAG;AACP,WACM,0CACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWC,KAAX,CAAiBc,GAAjB,CAAsB,CAACC,MAAD,EAAQC,GAAR,KACrB;AAAI,MAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeD,MAAM,CAACE,IAAtB,CADD,CADH,CADE,EAMJ,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANI,EAOJ,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAG,KAAKlB,KAAL,CAAWC,KAAzB;AACA,MAAA,UAAU,EAAI,KAAKkB,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPI,EASJ,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAG,KAAKC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATI,CADN;AAaD;;AA7C+B;;AAgDlC,eAAexB,GAAf","sourcesContent":["import React from 'react';\nimport Form from './components/form.js';\nimport Title from './components/title.js';\nimport List from './components/list.js';\n\nimport './styles.css';\n\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      items:[],\n\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://swapi.co/api/people/')\n    .then(data => data.json())\n    .then(jsonResult => {\n      console.log(jsonResult)\n      this.setState({items:jsonResult.results});\n    })\n    .catch(console.error);\n  }\n \n  // addItem = (string) => {\n  //   this.state.items.push(string);\n  //   this.setState({items:this.state.items})\n  // }\n\n  // deleteItem = (idx) => {\n  //   this.state.items.splice(idx,1);\n  //   this.setState({items:this.state.items});\n  // }\n\n\n  render() {\n    return (\n          <>\n        <ul>\n          {this.state.items.map( (person,idx) => (\n            <li key={idx}>{person.name}</li>\n          ))}\n        </ul>\n      <Title/>\n      <List items= {this.state.items}\n      deleteItem = {this.deleteItem}/>\n      <Form addItem= {this.addItem}/>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}